<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>arrow.projects</groupId>
	<artifactId>mems</artifactId>
	<version>1.0.2</version>
	<packaging>war</packaging>
	<properties>
		<versions.assertj>1.6.1</versions.assertj>
		<versions.java>1.8</versions.java>
		<versions.arquillian-bom>1.1.5.Final</versions.arquillian-bom>
		<versions.wildfly>8.1.0.Final</versions.wildfly>
		<versions.jsf-api>2.2.6</versions.jsf-api>
		<versions.omnifaces>1.8.1</versions.omnifaces>
		<versions.deltaspike>1.0.3</versions.deltaspike>
		<versions.arquillian.persistence>1.0.0.Alpha7</versions.arquillian.persistence>
		<versions.testng>6.8.8</versions.testng>
		<versions.jacoco>0.7.1.201405082137</versions.jacoco>
		<versions.primefaces>5.1</versions.primefaces>
		<versions.primefaces-extensions>2.1.0</versions.primefaces-extensions>
		<versions.qrcode>3.1.0</versions.qrcode>
		<versions.freemarker>2.3.20</versions.freemarker>
		<versions.beanutils>1.9.2</versions.beanutils>
		<versions.itext>5.5.3</versions.itext>


		<!-- Sonar -->
		<sonar.jdbc.url>jdbc:postgresql://192.168.1.3:5432/sonar</sonar.jdbc.url>
		<sonar.jdbc.username>postgres</sonar.jdbc.username>
		<sonar.jdbc.password>x</sonar.jdbc.password>
		<sonar.host.url>http://192.168.1.3:8864</sonar.host.url>
		<sonar.login>builder</sonar.login>
		<sonar.password>123456</sonar.password>
		<findbugs.version>3.0.0</findbugs.version>
		<findbugs.maven.version>2.5.5</findbugs.maven.version>
		<sonar.version>2.4</sonar.version>
		<versions.jacoco>0.7.1.201405082137</versions.jacoco>
		<arquillian.profile>jbossas</arquillian.profile>
		<!-- END OF SONAR -->

		<!-- Wildfly -->
		<!-- For auto deployment -->
		<versions.plugin.wildfly.maven>1.0.2.Final</versions.plugin.wildfly.maven>
		<wildfly.server>192.168.1.3</wildfly.server>
		<wildfly.remote.port>9990</wildfly.remote.port>
		<wildfly.remote.username>wildfly</wildfly.remote.username>
		<wildfly.remote.password>wildfly</wildfly.remote.password>
		<wildfly.remote.force>true</wildfly.remote.force>
		<jbossHome>${env.WILDFLY_HOME}</jbossHome>
		<test.skip>false</test.skip>
	</properties>


	<!-- Additional repositories run local server if comment h -->
	<repositories>
		<!-- remove this repo if run at home -->
		<repository>
			<id>business-traceability-repo</id>
			<url>http://192.168.1.3:2222/nexus/content/groups/business_traceability</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>projectRepo</id>
			<name>Repository of Project</name>
			<url>file:${project.basedir}/mavenrepo</url>
		</repository>

		<repository>
			<id>prime-repo</id>
			<name>PrimeFaces Maven Repository</name>
			<url>http://repository.primefaces.org</url>
		</repository>

		<repository>
			<id>sonatype-snapshots</id>
			<name>Sonatype Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>

		<repository>
			<id>JBoss repository</id>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>Codehaus repository</id>
			<url>http://central.maven.org/maven2</url>
		</pluginRepository>

	</pluginRepositories>


	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>

			<!-- This plugin is used for adding src/generated/java as source folder -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/generated/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<jeeversion>6.0</jeeversion>
					<wtpversion>2.0</wtpversion>
					<packaging>war</packaging>
					<additionalProjectFacets>
						<jboss.m2>1.0</jboss.m2>
						<jst.web>3.1</jst.web>
						<jst.jsf>2.2</jst.jsf>
						<jst.cdi>1.1</jst.cdi>
						<wst.jsdt.web>1.0</wst.jsdt.web>
						<java>1.8</java>
					</additionalProjectFacets>
					<additionalProjectnatures>
						<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
						<projectnature>org.jboss.tools.jst.web.kb.kbnature</projectnature>
						<projectnature>org.jboss.tools.cdi.core.cdinature</projectnature>
						<projectnature>org.eclipse.wst.jsdt.core.jsNature</projectnature>
						<projectnature>org.jboss.tools.jsf.jsfnature</projectnature>
						<projectnature>org.zeroturnaround.eclipse.jrebelNature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
						<buildcommand>org.jboss.tools.jst.web.kb.kbbuilder</buildcommand>
						<buildcommand>org.jboss.tools.cdi.core.cdibuilder</buildcommand>
						<buildcommand>org.zeroturnaround.eclipse.rebelXmlBuilder</buildcommand>
						<buildcommand>org.eclipse.m2e.core.maven2Builder</buildcommand>
					</additionalBuildcommands>

					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER</classpathContainer>
					</classpathContainers>

				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${versions.java}</source>
					<target>${versions.java}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warSourceDirectory>webapp</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>
				<configuration>
					<skip>${test.skip}</skip>
					<argLine>${argLine}</argLine>
					<systemPropertyVariables>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<jboss.home>${jbossHome}</jboss.home>
						<module.path>${jbossHome}/modules</module.path>
						<wildflyHome>${jbossHome}</wildflyHome>
						<!-- https://docs.jboss.org/author/display/ARQ/Container+config+runtime+selection -->
						<arquillian.launch>${arquillian.profile}</arquillian.launch>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${versions.jacoco}</version>
				<configuration>
					<!-- <includes> -->
					<!-- <include>**/*ServiceTest.java</include> -->
					<!-- </includes> -->
					<!-- <excludes> -->
					<!-- <exclude>**/main/java/*.class</exclude> -->
					<!-- <exclude>**/*Mapped_.class</exclude> -->
					<!-- <exclude>**/*Mapped.class</exclude> -->
					<!-- <exclude>**/*_.class</exclude> -->
					<!-- <exclude>**/*Mapped_.class</exclude> -->
					<!-- <exclude>**/arrow/framework/**</exclude> -->
					<!-- </excludes> -->
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<destFile>target/jacoco.exec</destFile>
								<propertyName>failsafe.argLine</propertyName>
							</configuration>
						</execution>
					</executions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${versions.plugin.wildfly.maven}</version>
				<configuration>
					<hostname>${wildfly.server}</hostname>
					<port>${wildfly.remote.port}</port>
					<username>${wildfly.remote.username}</username>
					<password>${wildfly.remote.password}</password>
					<force>${wildfly.remote.force}</force>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${versions.arquillian-bom}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>org.wildfly</groupId>
				<artifactId>wildfly-spec-api</artifactId>
				<version>${versions.wildfly}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>net.glxn.qrgen</groupId>
			<artifactId>javase</artifactId>
			<version>2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
		</dependency>

		<!-- JPA 2.1 API (JSR-339) -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JTA 1.2 Implementation -->
		<dependency>
			<groupId>org.jboss.narayana.jts</groupId>
			<artifactId>narayana-jts-jacorb</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Common Annotations 1.2 API (JSR-250) -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- CDI 1.1 API (JSR-346) -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>compile</scope>
			<version>1.2</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<!-- EJB 3.2 API (JSR-345) -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- EL 3.0 API (JSR-341) -->

		<dependency>
			<groupId>org.jboss.spec.javax.el</groupId>
			<artifactId>jboss-el-api_3.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>


		<!-- JSF 2.2 API (JSR-344) -->
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<scope>provided</scope>
			<version>${versions.jsf-api}</version>
		</dependency>

		<!-- Declare Mojarra JSF implementation here just to run debugger thru 
			JSF source -->
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Bean Validation 1.1 API (JSR-349) -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Declare JPA implementation (Hibernate) dependency here because we 
			use some Hibernate feature directly -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Dependencies added only for debugging -->

		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-core</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-servlet</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-core-impl</artifactId>
			<scope>provided</scope>
		</dependency>


		<!-- Third-party libraries -->
		<dependency>
			<groupId>org.omnifaces</groupId>
			<artifactId>omnifaces</artifactId>
			<version>${versions.omnifaces}</version>
		</dependency>


		<!-- Test suite -->
		<dependency>
			<groupId>org.eu.ingwar.tools</groupId>
			<artifactId>arquillian-suite-extension</artifactId>
			<version>1.1.2-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>

		<!--schedeluer config Quartz, DeltaSpike -->
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-api</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-impl</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-scheduler-module-api</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-scheduler-module-impl</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-jpa-module-impl</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-jpa-module-api</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-data-module-impl</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-data-module-api</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-partial-bean-module-impl</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-partial-bean-module-api</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.cdictrl</groupId>
			<artifactId>deltaspike-cdictrl-weld</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.cdictrl</groupId>
			<artifactId>deltaspike-cdictrl-api</artifactId>
			<version>${versions.deltaspike}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>


		<!-- Needed for running tests -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>compile</scope>
			<version>${versions.testng}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-spec-api</artifactId>
			<version>${versions.wildfly}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-ee</artifactId>
			<scope>provided</scope>

		</dependency>

		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-arquillian-container-managed</artifactId>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-aether-provider</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- for enabling ViewScoped in testing -->
		<dependency>
			<groupId>pl.itcrowd.mock-contexts-extension</groupId>
			<artifactId>mock-contexts-extension</artifactId>
			<version>1.0.1</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>pl.itcrowd.mock-contexts-extension</groupId>
			<artifactId>mock-contexts-extension-api</artifactId>
			<version>1.0.1</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>pl.itcrowd.mock-contexts-extension</groupId>
			<artifactId>mock-contexts-extension-impl</artifactId>
			<version>1.0.1</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) 
			JPA from JUnit/TestNG -->
		<dependency>
			<groupId>org.jboss.arquillian.testng</groupId>
			<artifactId>arquillian-testng-container</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Parse Pom.xml file for building war of testing -->
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Create Mockup Context, For Unit Test Conversation Components -->
		<!-- change to version 1.0.0 if run at home -->

		<!-- Required to register Protocol Servlet 3.0 ref: https://community.jboss.org/message/732602 -->
		<!-- For Scope type unit test: https://community.jboss.org/wiki/WhyDoIGetNoActiveContextsForScopeTypeWhenTestingOnJBossAS7 -->
		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- https://docs.jboss.org/author/display/ARQ/Persistence -->
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-persistence-dbunit</artifactId>
			<version>${versions.arquillian.persistence}</version>
			<scope>test</scope>

			<exclusions>
				<exclusion>
					<!-- Exclude the old version 2.2 to use version 3.0 below -->
					<groupId>org.dbunit</groupId>
					<artifactId>dbunit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.5.1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.10.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.10.1</version>
		</dependency>


		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-jacoco</artifactId>
			<scope>test</scope>
			<version>1.0.0.Alpha6</version>
		</dependency>

		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.core</artifactId>
			<version>${versions.jacoco}</version>
			<scope>test</scope>
		</dependency>


		<!-- Optional, but highly recommended -->
		<!-- For writing unit test -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${versions.assertj}</version>
			<scope>compile</scope>
		</dependency>

		<!-- for some text processing -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0</version>
		</dependency>

		<!-- https://code.google.com/p/guava-libraries/wiki/Release17 -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>17.0</version><!--$NO-MVN-MAN-VER$ -->
			<scope>compile</scope>
		</dependency>

		<!-- Primefaces -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>${versions.primefaces}</version>
		</dependency>

		<!-- Using All themes -->
		<dependency>
			<groupId>org.primefaces.themes</groupId>
			<artifactId>all-themes</artifactId>
			<version>1.0.10</version>
		</dependency>

		<dependency>
			<groupId>org.primefaces.extensions</groupId>
			<artifactId>primefaces-extensions</artifactId>
			<version>${versions.primefaces-extensions}</version>
		</dependency>

		<!-- QR Code -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>${versions.qrcode}</version>
		</dependency>

		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>${versions.qrcode}</version>
		</dependency>


		<!-- apache fop and apache velocity generate pdf -->
		<!-- <dependency> -->
		<!-- <groupId>org.apache.xmlgraphics</groupId> -->
		<!-- <artifactId>fop</artifactId> -->
		<!-- <version>1.0</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.apache.velocity</groupId> -->
		<!-- <artifactId>velocity</artifactId> -->
		<!-- </dependency> -->

		<!-- APACHE Commons codec -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>

		<!-- Support generate code -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>${versions.freemarker}</version>
		</dependency>

		<!-- BeanUtils -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${versions.beanutils}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<dependency>
			<groupId>de.malkusch.validation</groupId>
			<artifactId>validation</artifactId>
			<version>0.3.0</version>
		</dependency>

		<!-- Common fileupload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-cdi</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>withoutSharedRepo</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<repositories>
				<repository>
					<id>jboss</id>
					<name>jboss</name>
					<url>https://repository.jboss.org/nexus/content/groups/public-jboss</url>
					<layout>default</layout>
				</repository>

				<repository>
					<id>maven</id>
					<name>maven</name>
					<url>http://central.maven.org/maven2/</url>
				</repository>

			</repositories>
		</profile>
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dashboard-maven-plugin</artifactId>
			</plugin>
			<!-- Normally, we take off the dependency report, saves time. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>

			<!-- Report //TODO -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.1</version>
			</plugin>

			<!-- Test Coverage -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>#{findbugs.maven.version}</version>
				<configuration>
					<!-- Enables analysis which takes more memory but finds more bugs. If 
						you run out of memory, changes the value of the effort element to 'low'. -->
					<effort>Max</effort>
					<!-- Reports all bugs (other values are medium and max) -->
					<threshold>High</threshold>
					<xmlOutput>true</xmlOutput>
					<!-- Optional directory to put findbugs xdoc xml report -->
					<xmlOutputDirectory>target/site</xmlOutputDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar.version}</version>
			</plugin>

		</plugins>
	</reporting>
</project>